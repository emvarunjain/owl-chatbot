server:
  port: 8080
  connection-timeout: 120s
spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 512MB
      max-request-size: 512MB
  data:
    mongodb:
      uri: ${MONGO_URI:mongodb://localhost:27017/owl}
  kafka:
    # pick from SPRING_KAFKA_BOOTSTRAP_SERVERS if set, else KAFKA_BOOTSTRAP_SERVERS
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:${KAFKA_BOOTSTRAP_SERVERS:}}
  ai:
    ollama:
      base-url: ${OLLAMA_BASE_URL:http://localhost:11434}
      chat:
        options:
          model: ${OLLAMA_CHAT_MODEL:llama3.1:8b-instruct}
      embedding:
        options:
          model: ${OLLAMA_EMBED_MODEL:nomic-embed-text}
    vectorstore:
      qdrant:
        host: ${QDRANT_HOST:localhost}
        port: ${QDRANT_PORT:6334}
        collection-name: ${QDRANT_COLLECTION:owl_kb}
        distance: COSINE
        initialize-schema: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI:}

owl:
  cache:
    similarity-threshold: 0.90
    enable-cross-tenant: false
    max-answer-chars: 4000
  retrieval:
    score-threshold: 0.45
  rerank:
    enabled: true
  rateLimit:
    qpm: 120
  security:
    enabled: false
  preference:
    similarity-threshold: 0.92
  dlp:
    enabled: false
  guardrails:
    enabled: false
  safety:
    model: ${OWL_SAFETY_MODEL:}
    ollama:
      baseUrl: ${OWL_SAFETY_OLLAMA_BASE_URL:${SPRING_AI_OLLAMA_BASE_URL:http://localhost:11434}}
  retrieval:
    remote:
      url: ${RETRIEVAL_URL:}
  fallback:
    enabled: false
    provider: serpapi
    serpapi:
      apiKey: ${SERPAPI_API_KEY:}
    bing:
      apiKey: ${BING_SEARCH_KEY:}
      endpoint: ${BING_SEARCH_ENDPOINT:https://api.bing.microsoft.com/v7.0/search}
  cost:
    estimatePerCallUsd: 0.0005
    budget:
      enabled: false
      defaultUsd: 0
  isolation:
    collectionPerTenant: false
  regions:
    us-east-1:
      mongoUri: ${MONGO_URI:mongodb://localhost:27017/owl}
      qdrantUrl: ${QDRANT_URL:http://localhost:6333}
    eu-west-1:
      mongoUri: ${EU_MONGO_URI:}
      qdrantUrl: ${EU_QDRANT_URL:}

management:
  endpoint:
    health:
      probes:
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers
  metrics:
    tags:
      application: owl

---
spring:
  config:
    activate:
      on-profile: docker
  data:
    mongodb:
      auto-index-creation: true
      uri: ${MONGO_URI:mongodb://mongodb:27017/owl}
  ai:
    vectorstore:
      qdrant:
        host: ${QDRANT_HOST:qdrant} # <-- in-compose service name
        port: ${QDRANT_PORT:6334}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI:http://keycloak:8080/realms/owl-dev}
